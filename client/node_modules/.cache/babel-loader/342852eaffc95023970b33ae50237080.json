{"ast":null,"code":"var _jsxFileName = \"/home/phuocnghia712/Desktop/Cshttt/client/src/components/mainpages/createProduct/UploadImg.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { GlobalState } from '../../../GlobalState';\nimport axios from 'axios';\nimport Loading from '../utils/loading/Loading';\nimport { useHistory, useLocation, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport warning from \"../../../img/warning.svg\";\nimport checkic from \"../../../img/check.svg\";\n\nfunction UploadImg() {\n  const state = useContext(GlobalState);\n  const [images, setImages] = useState([]);\n  const [isAdmin] = state.userAPI.isAdmin;\n  const [token] = state.token;\n  const [loading, setLoading] = useState(false);\n  const {\n    search\n  } = useLocation();\n  const params = useParams();\n  const history = useHistory();\n  const [check, setCheck] = useState(false);\n  const [imagemores, setImagemore] = useState([]);\n  const styleUpload = {\n    display: images ? \"block\" : \"none\"\n  };\n\n  const getimage = async () => {\n    const query = new URLSearchParams(search);\n    console.log(query.get(\"id\"));\n    const res = await axios.get(`/api/getimg/${query.get(\"id\")}`);\n    console.log(res.data.data);\n    setImagemore(res.data.data);\n  };\n  /* const handleDestroy = async () => {\n       try {\n           if(!isAdmin) return alert(\"You're not an admin\")\n           setLoading(true)\n           await axios.post('/api/destroy', {public_id: images.public_id}, {\n               headers: {Authorization: token}\n           })\n           setLoading(false)\n           setImages(false)\n       } catch (err) {\n           alert(err.response.data.msg)\n       }\n   }*/\n\n\n  const handleUpload = async e => {\n    e.preventDefault();\n\n    try {\n      if (!isAdmin) return alert(\"You're not an admin\");\n      /* const file = e.target.files[0]\n           if(!file) return alert(\"File not exist.\")\n        if(file.size > 1024 * 1024) // 1mb\n           return alert(\"Size too large!\")\n        if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n           return alert(\"File format is incorrect.\")\n        let formData = new FormData()\n       formData.append('file', file)\n        setLoading(true)\n       const res = await axios.post('/api/upload', formData, {\n           headers: {'content-type': 'multipart/form-data', Authorization: token}\n       })\n       setLoading(false)*/\n      //setImages(res.data)\n\n      const files = e.target.files; //  console.log(files)\n\n      var i = 0;\n      let formData = new FormData();\n\n      for (i; i < files.length; i++) {\n        formData.append('files', files[i]);\n      }\n\n      setLoading(true);\n      const res = await axios.post(`/api/uploadmany/${params.id}`, formData, {\n        headers: {\n          'content-type': 'multipart/form-data',\n          Authorization: token\n        }\n      });\n      setLoading(false);\n      setCheck(true); // setImages(res.data.data[0])\n      //console.log(res.data.data)\n      //history.push('/product')\n\n      /*  for ( i; i<files.length;i++){\n        console.log(i)    \n        if(!files[i]) return alert(\"File not exist.\")\n         if(files[i].size > 1024 * 1024) // 1mb\n            return alert(files[i].name+\" \"+\"Size too large!\")\n             console.log(files[i].type)\n        if(files[i].type !== 'image/jpeg' && files[i].type !== 'image/png') // 1mb\n            return alert(i+\" \"+\"File format is incorrect.\")\n         let formData = new FormData()\n        formData.append('file', files[i])\n         setLoading(true)\n        const res = await axios.post('/api/upload', formData, {\n            headers: {'content-type': 'multipart/form-data', Authorization: token}\n        })\n        setLoading(false)\n        setImages(res.data)\n       console.log(res.data.url)\n      }*/\n    } catch (err) {// alert(err.response.data.msg)\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploadContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fun\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Step 2: For more images\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"files\",\n    id: \"files\",\n    onChange: handleUpload,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, check ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"more-mage-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, imagemores.map((item, index) => /*#__PURE__*/React.createElement(\"img\", {\n    className: \"more-image-image\",\n    width: \"300\",\n    height: \"300\",\n    key: index,\n    src: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 61\n    }\n  }))) : '')), check === true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alertcontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"iconup\",\n    src: checkic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Successful create new product\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alertbtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"btn1\",\n    to: \"/product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Product\"), /*#__PURE__*/React.createElement(Link, {\n    className: \"btn1 color\",\n    to: \"/create_product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Create new one\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"iconup\",\n    src: warning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Please select more images\")));\n}\n\nexport default UploadImg;","map":{"version":3,"sources":["/home/phuocnghia712/Desktop/Cshttt/client/src/components/mainpages/createProduct/UploadImg.js"],"names":["React","useState","useContext","useEffect","GlobalState","axios","Loading","useHistory","useLocation","useParams","Link","UploadImg","state","images","setImages","isAdmin","userAPI","token","loading","setLoading","search","params","history","check","setCheck","imagemores","setImagemore","styleUpload","display","getimage","query","URLSearchParams","console","log","get","res","data","handleUpload","e","preventDefault","alert","files","target","i","formData","FormData","length","append","post","id","headers","Authorization","err","map","item","index","url","checkic","warning"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,SAAlC,QAAmD,cAAnD;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAIA,SAASC,SAAT,GAAqB;AACjB,QAAMC,KAAK,GAAGV,UAAU,CAACE,WAAD,CAAxB;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,OAAD,IAAYH,KAAK,CAACI,OAAN,CAAcD,OAAhC;AAEA,QAAM,CAACE,KAAD,IAAUL,KAAK,CAACK,KAAtB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAaZ,WAAW,EAA9B;AACA,QAAMa,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAM,CAACgB,KAAD,EAAOC,QAAP,IAAmBvB,QAAQ,CAAC,KAAD,CAAjC;AAEA,QAAM,CAACwB,UAAD,EAAaC,YAAb,IAA6BzB,QAAQ,CAAC,EAAD,CAA3C;AAEA,QAAM0B,WAAW,GAAG;AAChBC,IAAAA,OAAO,EAAEf,MAAM,GAAG,OAAH,GAAa;AADZ,GAApB;;AAIA,QAAMgB,QAAQ,GAAG,YAAY;AACzB,UAAMC,KAAK,GAAG,IAAIC,eAAJ,CAAoBX,MAApB,CAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,GAAN,CAAU,IAAV,CAAZ;AACA,UAAMC,GAAG,GAAG,MAAM9B,KAAK,CAAC6B,GAAN,CAAW,eAAcJ,KAAK,CAACI,GAAN,CAAU,IAAV,CAAgB,EAAzC,CAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,IAAJ,CAASA,IAArB;AACAV,IAAAA,YAAY,CAACS,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAZ;AACH,GAND;AAOD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,QAAMC,YAAY,GAAG,MAAMC,CAAN,IAAU;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,UAAG,CAACxB,OAAJ,EAAa,OAAOyB,KAAK,CAAC,qBAAD,CAAZ;AAEd;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKQ;;AACI,YAAMC,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASD,KAAvB,CArBA,CAsBF;;AACE,UAAIE,CAAC,GAAC,CAAN;AACA,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AAEA,WAAKF,CAAL,EAAQA,CAAC,GAACF,KAAK,CAACK,MAAhB,EAAuBH,CAAC,EAAxB,EAA2B;AACvBC,QAAAA,QAAQ,CAACG,MAAT,CAAgB,OAAhB,EAAyBN,KAAK,CAACE,CAAD,CAA9B;AACH;;AACDxB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMgB,GAAG,GAAG,MAAM9B,KAAK,CAAC2C,IAAN,CAAY,mBAAkB3B,MAAM,CAAC4B,EAAG,EAAxC,EAA2CL,QAA3C,EAAqD;AACnEM,QAAAA,OAAO,EAAE;AAAC,0BAAgB,qBAAjB;AAAwCC,UAAAA,aAAa,EAAElC;AAAvD;AAD0D,OAArD,CAAlB;AAIAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,MAAAA,QAAQ,CAAC,IAAD,CAAR,CAnCA,CAoCD;AACC;AAGC;;AACH;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKS,KA/DD,CA+DE,OAAO4B,GAAP,EAAY,CACX;AACF;AACJ,GApED;;AAuEA,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,EAAE,EAAC,OAAnC;AAA2C,IAAA,QAAQ,EAAEf,YAArD;AAAmE,IAAA,QAAQ,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADR,eAYQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQd,KAAK,gBACT;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,UAAU,CAAC4B,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBAAiB;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,KAAK,EAAC,KAAxC;AAA8C,IAAA,MAAM,EAAC,KAArD;AAA2D,IAAA,GAAG,EAAEA,KAAhE;AAAuE,IAAA,GAAG,EAAED,IAAI,CAACE,GAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CAFR,CADS,GAMP,EARN,CAZR,CADA,EA0BIjC,KAAK,KAAK,IAAV,gBACA;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEkC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFA,CADA,eAKA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,EAAE,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,EAAE,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,CALA,CADA,gBAYA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,CAtCJ,CADJ;AA8CH;;AAED,eAAe/C,SAAf","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport { GlobalState } from '../../../GlobalState'\nimport axios from 'axios'\nimport Loading from '../utils/loading/Loading'\nimport { useHistory, useLocation, useParams } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport warning from '../../../img/warning.svg'\nimport checkic from '../../../img/check.svg'\n\nfunction UploadImg() {\n    const state = useContext(GlobalState)\n    const [images, setImages] = useState([])\n    const [isAdmin] = state.userAPI.isAdmin\n    \n    const [token] = state.token\n    const [loading, setLoading] = useState(false)\n    const { search } = useLocation()\n    const params = useParams()\n    const history = useHistory()\n    const [check,setCheck] = useState(false)\n   \n    const [imagemores, setImagemore] = useState([])\n    \n    const styleUpload = {\n        display: images ? \"block\" : \"none\"\n    }\n\n    const getimage = async () => {\n        const query = new URLSearchParams(search)\n        console.log(query.get(\"id\"))\n        const res = await axios.get(`/api/getimg/${query.get(\"id\")}`)\n        console.log(res.data.data)\n        setImagemore(res.data.data)\n    }\n   /* const handleDestroy = async () => {\n        try {\n            if(!isAdmin) return alert(\"You're not an admin\")\n            setLoading(true)\n            await axios.post('/api/destroy', {public_id: images.public_id}, {\n                headers: {Authorization: token}\n            })\n            setLoading(false)\n            setImages(false)\n        } catch (err) {\n            alert(err.response.data.msg)\n        }\n    }*/\n    const handleUpload = async e =>{\n        e.preventDefault()\n        try {\n            if(!isAdmin) return alert(\"You're not an admin\")\n           \n           /* const file = e.target.files[0]\n                if(!file) return alert(\"File not exist.\")\n\n            if(file.size > 1024 * 1024) // 1mb\n                return alert(\"Size too large!\")\n\n            if(file.type !== 'image/jpeg' && file.type !== 'image/png') // 1mb\n                return alert(\"File format is incorrect.\")\n\n            let formData = new FormData()\n            formData.append('file', file)\n\n            setLoading(true)\n            const res = await axios.post('/api/upload', formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n            setLoading(false)*/\n        //setImages(res.data)\n            const files = e.target.files\n          //  console.log(files)\n            var i=0;\n            let formData = new FormData()\n            \n            for (i; i<files.length;i++){\n                formData.append('files', files[i])\n            }\n            setLoading(true)\n            const res = await axios.post(`/api/uploadmany/${params.id}`, formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n           \n            setLoading(false)\n            setCheck(true)\n           // setImages(res.data.data[0])\n            //console.log(res.data.data)\n           \n            \n             //history.push('/product')\n          /*  for ( i; i<files.length;i++){\n            console.log(i)    \n            if(!files[i]) return alert(\"File not exist.\")\n\n            if(files[i].size > 1024 * 1024) // 1mb\n                return alert(files[i].name+\" \"+\"Size too large!\")\n\n                console.log(files[i].type)\n            if(files[i].type !== 'image/jpeg' && files[i].type !== 'image/png') // 1mb\n                return alert(i+\" \"+\"File format is incorrect.\")\n\n            let formData = new FormData()\n            formData.append('file', files[i])\n\n            setLoading(true)\n            const res = await axios.post('/api/upload', formData, {\n                headers: {'content-type': 'multipart/form-data', Authorization: token}\n            })\n            setLoading(false)\n            setImages(res.data)\n           console.log(res.data.url)\n        }*/\n        } catch (err) {\n           // alert(err.response.data.msg)\n        }\n    }\n   \n   \n    return(\n        <>\n        <div className=\"containter\">\n                <div className=\"uploadContainer\">\n                    <div className=\"fun\">\n                    <h1 className=\"step\">Step 2: For more images</h1>\n                    </div>\n\n                    <div className=\"upload\">\n                        <input type=\"file\" name=\"files\" id=\"files\" onChange={handleUpload} multiple />\n\n\n                    </div>\n                </div>\n                <div>\n                    {\n                        check ?\n                    <div className=\"more-mage-container\">\n                        {\n                            imagemores.map((item, index) => <img className=\"more-image-image\" width=\"300\" height=\"300\" key={index} src={item.url} />)\n                        }\n                    </div>\n                    : ''\n                    }\n                </div>\n                </div>\n                        {\n            check === true ? \n            <div className=\"alertcontainer\">\n            <div className=\"alert\">\n            <img className=\"iconup\" src={checkic}/>\n            <h1>Successful create new product</h1>\n            </div>\n            <div className=\"alertbtn\">\n            <Link className=\"btn1\" to=\"/product\">Product</Link>\n            <Link className=\"btn1 color\" to=\"/create_product\">Create new one</Link>\n            </div>\n            </div>\n            :\n            <div className=\"alert warning\">\n            <img className=\"iconup\" src={warning}/>\n            <h1>Please select more images</h1>\n            </div>\n            }\n        </>\n    )\n}\n\nexport default UploadImg;\n\n\n"]},"metadata":{},"sourceType":"module"}